{"version":3,"sources":["img/logo.png","img/logoFooter.png","components/Sertificates.js","components/Item.js","components/List.js","components/InfoCard.js","components/Search.js","components/Form.js","components/SulaApp.js","components/Fio.js","components/AdminSearch.js","components/PdfToPrint.js","components/AdminPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","autoClearingStatus","Item","props","lastName","id","onClick","className","List","base","items","map","item","key","InfoCard","selectedItem","search","inputStatus","flagName","imgId","style","opacity","src","alt","Search","onChange","placeholder","name","value","Form","formStatus","onSubmit","display","dataForSertificate","SulaApp","state","intervalId","fio","formData","getSertificate","setState","closeForm","submitForm","e","preventDefault","makeStorage","target","reset","Swal","fire","title","text","icon","confirmButtonText","fioData","selectLastName","filter","JSON","parse","localStorage","getItem","push","setItem","stringify","console","log","findLastName","axios","get","then","response","data","this","copyBase","toLowerCase","indexOf","fillterBase","logo","start","startInterval","href","rel","logoFooter","React","Component","printedFios","Fio","selectFio","includes","AdminSearch","PdfToPrint","date","Sertificates","adminSearch","applications","isSelecting","indexOfElement","selectingDate","clearListNow","clear","window","location","reload","autoCleanCheck","autoClearList","setInterval","clearInTime","removeItem","Date","hours","getHours","minutes","getMinutes","clearList","dateNow","moment","locale","format","changeDate","alreadyPrinted","handlePrint","findApplication","copyApplications","fios","fillterApplications","content","componentRef","type","backgroundColor","ref","el","AdminPage","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b26c8587.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f4b99cca.png\";","module.exports = __webpack_public_path__ + \"static/media/logoFooter.8daccb5d.png\";","import React from 'react';\nimport ReactToPrint, { PrintContextConsumer } from \"react-to-print\";\nimport moment from 'moment';\nimport 'moment/locale/ru';\n\nimport Fio from './Fio';\nimport AdminSearch from './AdminSearch';\nimport PdfToPrint from './PdfToPrint';\nimport './App.css';\n\nlet dataForSertificate = JSON.parse(localStorage.getItem(\"dataForSertificate\")) || [];\nlet printedFios = [];\nprintedFios = JSON.parse(localStorage.getItem(\"printedFios\")) || [];\n\nlet autoClearingStatus;\n\n\nclass Sertificates extends React.Component {\n  state = {\n    fio: '',\n    selectedItem: '',\n    date: '',\n    autoClearingStatus: false,\n    adminSearch: '',\n    applications: [],\n  }\n\n  componentWillMount() {\n    this.autoCleanCheck();\n    console.log(localStorage);\n\n    let applications = dataForSertificate.filter(item => typeof item === 'string');\n    this.setState({ applications: applications })\n  }\n\n  isSelecting = (fio) => {\n    let indexOfElement = dataForSertificate.indexOf(fio);\n    this.setState({ selectedItem: dataForSertificate[indexOfElement + 1] });\n    this.setState({ selectedItem: { ...dataForSertificate[indexOfElement + 1], selectFio: fio } })\n    this.setState({ fio: fio });\n    this.selectingDate();\n  }\n  clearListNow = () => {\n    localStorage.clear();\n    window.location.reload();\n  }\n\n\n  autoCleanCheck = () => {\n    autoClearingStatus = JSON.parse(localStorage.getItem(\"autoClearingStatus\"));\n    console.log(autoClearingStatus)\n    if (autoClearingStatus === true) {\n      this.autoClearList();\n    }\n  }\n  autoClearList = () => {\n    let {autoClearingStatus} = this.state;\n    if (autoClearingStatus === false) {\n      autoClearingStatus = true;\n      localStorage.setItem(\"autoClearingStatus\", JSON.stringify(autoClearingStatus));\n      this.setState({ autoClearingStatus: true })\n      let intervalId = setInterval(() => {\n        this.clearInTime();\n      }, 50000);\n      localStorage.setItem(\"intervalId\", JSON.stringify(intervalId));\n      console.log('процесс пошел!');\n      console.log(localStorage);\n    }\n    else {\n      let autoClearingStatus = false;\n      localStorage.setItem(\"autoClearingStatus\", JSON.stringify(autoClearingStatus));\n      localStorage.removeItem('intervalId');\n      this.setState({ autoClearingStatus: false });\n      console.log('процесс заглох');\n      console.log(localStorage);\n      console.log(autoClearingStatus);\n    }\n  }\n  clearInTime = () => {\n    let date = new Date;\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    if (hours === 0 && minutes === 0) {\n      this.clearList();\n    }\n  }\n  clearList = () => {\n    localStorage.removeItem('dataForSertificate');\n    localStorage.removeItem('printedFios');\n    window.location.reload();\n  }\n\n\n  selectingDate = () => {\n    let dateNow = moment().locale('ru').format('DD MMMM YYYY');\n    this.setState({ date: dateNow });\n  }\n  changeDate = (e) => {\n    const { value } = e.target;\n    let dateNow = moment(value).locale('ru').format('D MMMM YYYY');\n    this.setState({ date: dateNow });\n  }\n  alreadyPrinted = (handlePrint, fio) => {\n    handlePrint();\n    if (fio !== '') {\n      printedFios.push(fio);\n    }\n    localStorage.setItem(\"printedFios\", JSON.stringify(printedFios));\n    console.log(printedFios);\n  }\n  findApplication = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n  fillterApplications() {\n    const { adminSearch, applications } = this.state;\n\n    let copyApplications = [...applications];\n    if (adminSearch !== '') {\n      copyApplications = copyApplications.filter(item => {\n        if (item.toLowerCase().indexOf(adminSearch.toLowerCase()) === 0) {\n          return item;\n        }\n      })\n    }\n    return copyApplications;\n  }\n\n\n  render() {\n    console.log(localStorage);\n    console.log(this.state);\n    const applications = this.fillterApplications();\n\n    const fios = applications.map(fio => (\n      <Fio\n        key={fio}\n        fio={fio}\n        onClick={this.isSelecting}\n        selectedItem={this.state.selectedItem}\n      />\n    ))\n\n    return (\n      <div className='adminPage'>\n\n        <ul className=\"sertificate\">\n          {fios}\n        </ul>\n\n        <div className='functional'>\n\n          <AdminSearch\n            onChange={this.findApplication}\n            adminSearch={this.state.adminSearch}\n          />\n\n          <ReactToPrint\n            content={() => this.componentRef}>\n\n            <PrintContextConsumer>\n              {({ handlePrint }) => (\n                <button\n                  className='print'\n                  onClick={() => this.alreadyPrinted(handlePrint, this.state.fio)}\n                >\n                  Печать\n                </button>\n              )}\n            </PrintContextConsumer>\n          </ReactToPrint>\n\n          <input type=\"date\" name=\"date\" className=\"calendar\" onChange={this.changeDate} />\n\n          <div className='cleanering'>\n            <button\n              className='clear' onClick={this.clearListNow}>Очистить список</button>\n            <button\n              className='autoclear'\n              style={this.state.autoClearingStatus === true ? { backgroundColor: 'lime' } : { backgroundColor: 'white' }}\n              onClick={this.autoClearList}\n            >\n              Очищать автоматически в 00:00\n            </button>\n          </div>\n\n          <div className='pdfToPrint'>\n            <PdfToPrint\n              ref={el => (this.componentRef = el)}\n              fio={this.state.fio}\n              date={this.state.date}\n              selectedItem={this.state.selectedItem}\n            />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\nexport default Sertificates;","import React from 'react';\n\nimport './App.css';\n\nconst Item = (props) => {\n  const {lastName, id, onClick} = props;\n  \n  return (\n    \n    <li\n    onClick = { () => onClick(id) } \n    className = \"lastName\"\n    >\n    {lastName}\n    </li>\n  );\n}\n\nexport default Item;","import React from 'react';\n\nimport './App.css';\nimport Item from './Item';\n\nconst List = (props) => {\n  const {base, onClick} = props; \n\n const items = base.map(item => (\n   <Item\n   key = {item.id}\n   {...item}\n   onClick = {onClick}\n   />\n )) \n\n  return (\n    <ul>\n      {items}\n    </ul>\n  );\n}\n\nexport default List;","import React from 'react';\n\nimport './App.css';\n\nconst InfoCard = (props) => {\n  const imgUrl = 'https://dmitrykalko.github.io/rakovich/base/images/';\n  const { selectedItem, search, inputStatus, onClick } = props\n  const { lastName, flagName, imgId } = selectedItem;\n\n  return (\n    <div className=\"info\"\n      style={inputStatus === true ? { opacity: 1 } : { opacity: 0 }}\n      style={search !== '' ? { opacity: 0 } : { opacity: 1 }}\n    >\n      <h1>{lastName}</h1>\n      <h3>Герб: {flagName}</h3>\n      <img className=\"imgUrl\" src={imgUrl + +imgId + '.png'} alt=\"flagImage\" />\n      <button className=\"sertificate-btn\" onClick={() => onClick(selectedItem)}>Получить грамоту шляхтича</button>\n    </div>\n  );\n}\n\nexport default InfoCard;","import React from 'react';\n\nconst Search = (props) => {\n    const { onChange, search} = props;\n    return (\n        <div className=\"search\">\n            <input \n            className=\"inputField\"  \n            placeholder=\"ВВЕДИТЕ ВАШУ ФАМИЛИЮ\" \n            name=\"search\" \n            onChange={onChange} \n            value = {search === '' ? ''  : search}\n            />\n        </div>\n\n    );\n}\n\nexport default Search;","import React from 'react';\n\nconst Form = (props) => {\n    const { formStatus, onClick, onChange, onSubmit } = props;\n    \n    return (\n       <form \n       className=\"form\" \n       style={formStatus === true ? {display:'flex'} : {display:'none'}}\n       onSubmit={onSubmit}\n       >\n           <div \n           className=\"close\"\n           onClick={onClick}\n           > \n           </div>\n           <input\n           className=\"fioField\"  \n           placeholder=\"Фамилия Имя Отчество\" \n           name=\"fio\" \n           onChange={onChange}\n           />\n           <button className='formBtn'>Получить грамоту шляхтича</button>\n       </form>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\n\nimport './App.css';\nimport logo from '../img/logo.png';\nimport logoFooter from '../img/logoFooter.png'\n\nimport List from './List';\nimport InfoCard from './InfoCard';\nimport Search from './Search';\nimport Form from './Form';\n\n\nconst url = 'https://dmitrykalko.github.io/rakovich/base/db.json';\nlet dataForSertificate = [];\n\nclass SulaApp extends React.Component {\n    state = {\n    base: [],\n    selectedItem: null,\n    search: '',\n   // inputStatus: false,\n    intervalId: 0,\n    formStatus: false,\n    fio:'',\n    formData:'',\n  }\n\n  componentDidMount() {\n    axios.get(`${url}`)\n            .then(response => {\n            const base = response.data;\n            this.setState({ base: base.base});\n            })\n  };\n\n\n  getSertificate = (selectedItem) => {\n    const {lastName, flagName, imgId} = selectedItem;\n    this.setState({ formStatus: true, lastName: lastName,flagName: flagName, imgId:imgId })\n  }\n  closeForm = () => {\n    this.setState({formStatus: false})\n    // if(this.state.search !== '') {\n    //   this.setState({sertificateStatus: false})\n    // } \n  }\n  submitForm = (e) => {\n    const {fio} = this.state;\n    e.preventDefault();\n    this.setState({formData: fio, formStatus: false})\n    this.makeStorage();\n\n    e.target.reset();\n     if(this.state.fio !== '') {\n     Swal.fire({\n      title: 'Поздравляем, Вы Шляхтич!',\n      text: 'Свою личную грамоту Шляхтича Вы можете получить на рецепшен',\n      icon: 'success',\n      confirmButtonText: 'Уже иду!'\n    })\n    this.setState({fio: \"\"})\n    } else {\n      Swal.fire({\n        text: 'Пожалуйста, введите свою Фамилию Имя Отчество',\n        icon: 'error',\n        confirmButtonText: 'Понятно'\n      })\n    }\n}\n\n  fioData = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  selectLastName = (id) => {\n    const { base } = this.state;\n    const copyBase = [...base];\n    const selectedItemArr = copyBase.filter(item => item.id === id);\n    const selectedItem = selectedItemArr[0];\n    this.setState({ selectedItem });\n    this.setState({inputStatus: true})\n    this.setState({search: ''})\n\n    //this.startInterval();   \n    //запускает интервал\n  }\n  //   startInterval = () => { \n  //   console.log('интервал запущен');\n    \n  //   const intervalId =  setInterval (this.coverInfoCard, 10000)  \n  //   this.setState({intervalId});\n  // }\n  // coverInfoCard = () => {\n  //   console.log('смена статуса');\n  //   this.setState ({inputStatus: false})\n  //   this.stopInterval();\n  // }\n  // stopInterval = () => {\n  //   clearInterval(this.state.intervalId);\n  //   console.log('очищен');\n  // }\n\n  makeStorage = () => {\n\n    const {fio} = this.state;\n    const {selectedItem} = this.state;\n   \n    dataForSertificate = JSON.parse(localStorage.getItem(\"dataForSertificate\")) || []; \n    if(fio !== '') {\n    dataForSertificate.push(fio,selectedItem);\n    }\n    localStorage.setItem(\"dataForSertificate\", JSON.stringify(dataForSertificate));\n    console.log(dataForSertificate);\n  }\n\n  findLastName = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  fillterBase() {\n    const { base, search} = this.state;\n  \n    let copyBase = [...base];\n  \n    if (search !== '') {\n      copyBase = copyBase.filter(item => {\n        if(item.lastName.toLowerCase().indexOf(search.toLowerCase()) === 0) {\n          return item.lastName;\n        }\n        //return item.lastName.toLowerCase().includes(search.toLowerCase());\n      })\n    }\n    return copyBase;\n  }\n\n\n\n  // cities.filter(function (e) {\n  //   return e.population < 1000000;\n  // }).sort(function (a, b) {\n  //   return b.population - a.population;\n  // }).map(function (e) {\n  //   console.log(e.name + ': ' + e.population);\n  // });\n\n  render() {\n      \n  console.log(this.state);\n  const base = this.fillterBase();\n   \n  return (\n    <>\n    <main>\n      <div className=\"App\">\n        <div className=\"backgroundImage\"><img src={logo} alt=\"logo\" className=\"logo\" /></div>\n\n        <div className=\"container\">\n          <Search \n          onChange={this.findLastName}\n          inputStatus = {this.state.inputStatus}\n          search = {this.state.search}\n          />\n\n          <div className=\"cards\">\n            <div className=\"lastNames\">\n            {base && (\n              \n              <List \n              base = {base}\n              onClick={this.selectLastName}\n              start={this.startInterval}\n              /> \n                )}\n            </div>\n            <div>\n              {this.state.selectedItem &&(\n              <InfoCard\n              selectedItem={this.state.selectedItem}\n              inputStatus = {this.state.inputStatus}\n              search = {this.state.search}\n              onClick={this.getSertificate}\n              />\n              )}\n            </div>\n          </div>\n          <Form\n            formStatus={this.state.formStatus}\n            search={this.state.search}\n            onClick={this.closeForm}\n            onChange={this.fioData}\n            onSubmit={this.submitForm}\n            />\n\n        </div>\n      </div>\n</main>\n\n<footer>\n<div className=\"footer\">\n          <hr className=\"line\" />\n          <a href=\"https://parksula.by/ru/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={logoFooter} alt=\"logoFoot\"/></a> \n          <hr className=\"line\" />\n        </div>\n</footer>\n</>\n    \n  );\n  }\n}\n\nexport default SulaApp;\n","import React from 'react';\n\nimport './App.css';\n\nlet printedFios = JSON.parse(localStorage.getItem(\"printedFios\")) || [];\n\n\nconst Fio = (props) => {\n    const { fio, onClick, selectedItem } = props;\n    const {  selectFio } = selectedItem;\n\n    return (\n        <li className='adminList'>\n            <h3\n            className = {printedFios.includes(fio) === true && fio !== selectFio ? 'printed' \n            : printedFios.includes(fio) === true && fio === selectFio ? 'selectingNow' \n            : printedFios.includes(fio) !== true && fio === selectFio ? 'selectingNow' \n            : 'notSelected'}\n            >{fio}\n            </h3>\n            <button className='formation' onClick={ () => onClick(fio)}>Сформировать</button>\n            {/* <p className='printTime'>Напечатано в {}</p> */}\n        </li>\n    );\n}\n\nexport default Fio;","import React from 'react';\n\nconst AdminSearch = (props) => {\n    const { onChange } = props;\n    return (\n        <div className=\"admin-search-box\">\n            <input \n            className=\"admin-search\"  \n            placeholder=\"Введите фамилию\" \n            name=\"adminSearch\" \n            onChange={onChange} \n            />\n        </div>\n    );\n}\n\nexport default AdminSearch;","import React from \"react\";\n\nconst imgUrl = 'https://dmitrykalko.github.io/rakovich/base/images/';\n\nclass PdfToPrint extends React.Component {\n\n    render() {\n        let { lastName, flagName, imgId } = this.props.selectedItem;\n        let date = this.props.date;\n        \n        return (\n\n            <div className=\"pdf\">\n                <h1 className='title'>Грамота Шляхтича</h1>\n                <img className=\"flagForPdf\" src={imgUrl + +imgId + '.png'} alt=\"flagImage\" />\n                <h4 className='firstString'>Настоящая грамота удостоверяет, что</h4>\n                <h2 className='fio'>{this.props.fio}</h2>\n                <h4 className='secondString'>принадлежит к шляхецкому роду</h4>\n                <h2 className='familyName'>«{lastName}»</h2>\n                <h4 className='thirdString'>с родовым гербом</h4>\n                <h2 className='familyFlag'>«{flagName}»</h2>\n                <p className=\"datePdf\">{date}</p>\n            </div>\n        );\n    }\n}\n\nexport default PdfToPrint;","import React from 'react';\n\nimport Sertificates from './Sertificates';\n\nimport './App.css';\n\nconst AdminPage = () => {\n  return (\n   <div className='admin'>\n     <h1>Заявки на сертификаты</h1>\n     <Sertificates />\n  </div>\n  )\n}\n\nexport default AdminPage;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport SulaApp from './components/SulaApp';\nimport AdminPage from './components/AdminPage';\n\n\nconst App = () => {\n \n  \n    return (\n      <div>\n          <Route path=\"/\" exact component={SulaApp} />\n          <Route path=\"/admin\" exact component={AdminPage} />\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n</BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}